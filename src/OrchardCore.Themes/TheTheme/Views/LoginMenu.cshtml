@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Users
@using OrchardCore.Users.Models
@inject ISiteService SiteService
@inject SignInManager<IUser> SignInManager

@{
    var allowChangeEmail = (await SiteService.GetSiteSettingsAsync()).As<ChangeEmailSettings>().AllowChangeEmail;
    var loginSettings = (await SiteService.GetSiteSettingsAsync()).As<LoginSettings>();
    var externalAuthenticationSchemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
}

<ul class="navbar-nav">

    @await RenderSectionAsync("NavbarTop", required: false)

    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                @if (IsSectionDefined("UserMenuTitle"))
                {
                    @await RenderSectionAsync("UserMenuTitle", required: false)
                }
                else
                {
                    <i class="fa fa-user fa-fw" aria-hidden="true"></i> @User.Identity.Name
                }
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                @if (User.HasClaim("Permission", "AccessAdminPanel"))
                {
                    <li><a class="dropdown-item" asp-route-area="OrchardCore.Admin" asp-controller="Admin" asp-action="Index"><i class="fa-solid fa-desktop fa-fw" aria-hidden="true"></i> @T["Dashboard"]</a></li>
                }
                @if (allowChangeEmail)
                {
                    <li><a class="dropdown-item" asp-route-area="OrchardCore.Users" asp-controller="ChangeEmail" asp-action="Index"><i class="fa-solid fa-envelope fa-fw" aria-hidden="true"></i> @T["Change Email"]</a></li>
                }
                <li>
                    <a class="dropdown-item" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="ChangePassword" asp-route-returnUrl="@FullRequestPath"><i class="fa-solid fa-lock fa-fw" aria-hidden="true"></i> @T["Change Password"]</a>
                </li>
                @if (externalAuthenticationSchemes.Count() > 0)
                {
                    <li><a class="dropdown-item" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="ExternalLogins"><i class="fa-solid fa-user-lock fa-fw" aria-hidden="true"></i> @T["External Logins"]</a></li>
                }
                @await RenderSectionAsync("UserMenuItems", required: false)

                <li>
                    <form asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="LogOff" method="post" class="no-multisubmit">
                        <button type="submit" class="btn btn-link navbar-btn dropdown-item"><i class="fa-solid fa-sign-out-alt fa-fw" aria-hidden="true"></i> @T["Log off"]</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item"><a class="nav-link" asp-route-area="OrchardCore.Users" asp-controller="Account" asp-action="Login"><i class="fa-solid fa-sign-in-alt fa-fw" aria-hidden="true"></i> @T["Log in"]</a></li>
    }
</ul>