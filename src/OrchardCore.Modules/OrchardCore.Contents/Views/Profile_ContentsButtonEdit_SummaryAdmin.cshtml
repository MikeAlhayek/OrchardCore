@using OrchardCore.Contents
@using OrchardCore.ContentManagement
@using OrchardCore.Contents.Models
@inject IAuthorizationService AuthorizationService
@inject IContentManager ContentManager
@{
    ContentItem contentItem = Model.ContentItem;
    var hasPublished = await ContentManager.HasPublishedVersionAsync(contentItem);

    var feature = ViewContext.HttpContext.Features.Get<ContentProfileFeature>();
    string profileId = contentItem.ContentItemId;
    string contentItemId = null;
    bool canViewProfile = true;

    if (feature != null)
    {
        var containedProfilePart = contentItem.As<ContainedProfilePart>();

        if (containedProfilePart != null && containedProfilePart.ProfileContentItemId == feature.ProfileContentItem.ContentItemId)
        {
            contentItemId = Model.ContentItem.ContentItemId;
            profileId = containedProfilePart.ProfileContentItemId;
            canViewProfile = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.ViewContent, feature.ProfileContentItem);
        }
    }
}

@if (await AuthorizationService.AuthorizeAsync(User, CommonPermissions.EditContent, contentItem))
{
    <a asp-controller="Profile" asp-action="Edit" asp-route-profileId="@profileId" asp-route-contentItemId="@contentItemId" asp-route-returnUrl="@FullRequestPath" class="btn btn-sm btn-primary edit"><span>@T["Edit"]</span></a>
}

@if (hasPublished)
{
    <a asp-controller="Profile" asp-action="Display" asp-route-profileId="@profileId" asp-route-contentItemId="@contentItemId" asp-route-returnUrl="@FullRequestPath" target="_blank" class="btn btn-sm btn-success view"><span>@T["View"]</span></a>

}

@if (contentItem.HasDraft() && await AuthorizationService.AuthorizeAsync(User, CommonPermissions.PreviewContent, contentItem))
{
    <a asp-controller="Profile" asp-action="Preview" asp-route-profileId="@profileId" asp-route-contentItemId="@contentItemId" asp-route-returnUrl="@FullRequestPath" target="_blank" class="btn btn-sm btn-primary preview"><span>@T["Preview Draft"]</span></a>
}
