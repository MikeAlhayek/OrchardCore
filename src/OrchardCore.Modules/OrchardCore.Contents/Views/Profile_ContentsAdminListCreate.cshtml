@model ContentOptionsViewModel
@using OrchardCore.Contents
@{
    var feature = ViewContext.HttpContext.Features.Get<ContentProfileFeature>();
    if (feature?.ProfileContentItem == null || Model.CreatableTypes.Count == 0)
    {
        return;
    }
}
@if (Model.CreatableTypes.Count == 1)
{
    <a class="btn btn-secondary" href="@Url.RouteUrl(new { area = "OrchardCore.Contents", controller = "Profile", action = "Create", contentTypeId = Model.CreatableTypes.First().Value, profileId = feature.ProfileContentItem.ContentItemId , returnUrl = FullRequestPath })">@T["New {0}", Model.CreatableTypes.First().Text]</a>
}
else
{
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="new-dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @T["New"]
        </button>
        <ul class="dropdown-menu dropdown-menu-end scrollable" aria-labelledby="bulk-action-menu-button">
            @foreach (var item in Model.CreatableTypes)
            {
                <li><a class="dropdown-item" href="@Url.RouteUrl(new { area = "OrchardCore.Contents", controller = "Profile", action = "Create", contentTypeId = @item.Value, profileId = feature.ProfileContentItem.ContentItemId, returnUrl = FullRequestPath })">@T[Html.Encode(item.Text)]</a></li>
            }
        </ul>
    </div>
}
