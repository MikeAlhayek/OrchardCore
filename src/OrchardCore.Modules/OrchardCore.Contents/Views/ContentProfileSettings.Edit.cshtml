@model OrchardCore.Contents.ViewModels.ContentProfileSettingsViewModel

<div class="mb-3">
    <div class="form-check">
        <input type="checkbox" class="form-check-input" asp-for="DisplayAsProfile" checked="@Model.DisplayAsProfile">
        <label class="form-check-label" asp-for="DisplayAsProfile">@T["Display as profile"]</label>
        <span class="hint dashed">@T["Check to display the content items as profile."]</span>
    </div>
</div>

<div class="mb-3" id="ContentTypesContainer">
    <label asp-for="ContainedContentTypes">@T["Content Types"]</label>
    <span class="hint">@T["The content types to render inside the profile."]</span>
    @await Component.InvokeAsync("SelectContentTypes", new { selectedContentTypes = Model.ContainedContentTypes, htmlName = Html.NameFor(m => m.ContainedContentTypes) })
</div>

<script at="Foot">
    document.addEventListener('DOMContentLoaded', function() {
        var displayAsProfile = document.getElementById('@Html.IdFor(x => x.DisplayAsProfile)');
        var contentTypesContainer = document.getElementById('ContentTypesContainer');

        displayAsProfile.addEventListener('change', function(src) {

            if (src.target.checked) {
                contentTypesContainer.classList.remove('d-none');
            } else {
                contentTypesContainer.classList.add('d-none');
            }
        });

        displayAsProfile.dispatchEvent(new Event('change'));
    });
</script>
