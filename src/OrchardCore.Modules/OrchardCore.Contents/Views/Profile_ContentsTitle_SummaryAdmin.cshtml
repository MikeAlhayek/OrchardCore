@model ContentItemViewModel
@using OrchardCore.ContentManagement
@using OrchardCore.Contents
@using OrchardCore.Contents.Models
@inject IAuthorizationService AuthorizationService
@{
    var feature = ViewContext.HttpContext.Features.Get<ContentProfileFeature>();
    string profileId = Model.ContentItem.ContentItemId;
    string contentItemId = null;
    bool canViewProfile = true;

    if (feature != null)
    {
        var containedProfilePart = Model.ContentItem.As<ContainedProfilePart>();

        if (containedProfilePart != null && containedProfilePart.ProfileContentItemId == feature.ProfileContentItem.ContentItemId)
        {
            contentItemId = Model.ContentItem.ContentItemId;
            profileId = containedProfilePart.ProfileContentItemId;
            canViewProfile = await AuthorizationService.AuthorizeAsync(User, CommonPermissions.ViewContent, feature.ProfileContentItem);
        }
    }
}

@if (canViewProfile && await AuthorizationService.AuthorizeAsync(User, CommonPermissions.EditContent, Model.ContentItem))
{
    <a asp-controller="Profile" asp-action="Edit" asp-route-profileId="@profileId" asp-route-contentItemId="@contentItemId">@Model.ContentItem</a>
}
else if (canViewProfile && await AuthorizationService.AuthorizeAsync(User, CommonPermissions.ViewContent, Model.ContentItem))
{
    <a asp-controller="Profile" asp-action="Display" asp-route-profileId="@profileId" asp-route-contentItemId="@contentItemId">@Model.ContentItem</a>
}
else
{
    @Model.ContentItem
}
